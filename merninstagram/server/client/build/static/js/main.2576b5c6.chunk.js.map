{"version":3,"sources":["components/navbar.js","components/screens/home.js","components/screens/login.js","components/screens/profile.js","components/screens/signup.js","components/screens/createpost.js","components/screens/UserProfile.js","components/screens/followpost.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","useContext","UserContext","state","dispatch","history","useHistory","className","to","id","onClick","localStorage","clear","type","push","Home","useState","data","setData","useEffect","fetch","headers","getItem","then","res","json","result","posts","map","item","key","_id","style","padding","postedBy","name","float","postId","method","console","log","newData","filter","catch","err","alt","src","photo","color","likes","includes","body","JSON","stringify","length","title","comments","record","fontWeight","text","onSubmit","e","preventDefault","target","value","placeholder","Login","password","setPassword","email","setEmail","onChange","test","error","M","toast","html","classes","setItem","token","user","payload","Profile","mypics","setPics","image","setImage","mypost","FormData","append","pic","url","maxWidth","margin","borderBottom","display","justifyContent","width","height","borderRadius","followers","following","file","files","Signup","setName","undefined","setUrl","uploadFields","message","PostData","uploadPic","CreatePost","setTitle","setBody","textAlign","postDetails","userProfile","setProfile","userid","useParams","showFollow","setShowFollow","followId","prevstate","unfollowId","newFollower","reducer","action","createContext","Routing","parse","exact","path","UserProfile","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPA8CeA,EAzCA,WAAK,IAAD,EACQC,qBAAWC,GAA7BC,EADU,EACVA,MAAMC,EADI,EACJA,SACPC,EAAUC,cA0Bd,OACI,6BACA,yBAAKC,UAAU,qBACb,kBAAC,IAAD,CAAMC,GAAIL,EAAM,IAAI,SAAUI,UAAU,mBAAxC,aACA,wBAAIE,GAAG,aAAaF,UAAU,SA5BjCJ,EACM,CACL,4BAAI,kBAAC,IAAD,CAAMK,GAAG,YAAT,YACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,eAAT,gBACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,eAAT,mBACJ,4BACE,4BAAQD,UAAU,oDAChBG,QAAS,WACPC,aAAaC,QACbR,EAAS,CAACS,KAAK,UACfR,EAAQS,KAAK,YAJjB,YAYG,CACL,4BAAI,kBAAC,IAAD,CAAMN,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,WAAT,gBC8IGO,G,MAvKF,WAAK,IAAD,EACQC,mBAAS,IADjB,mBACNC,EADM,KACDC,EADC,OAEYjB,qBAAWC,GAA7BC,EAFM,EAENA,MAFM,EAEAC,SACbe,qBAAU,WACNC,MAAM,WAAW,CACbC,QAAQ,CACJ,cAAgB,UAAUV,aAAaW,QAAQ,UAGtDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEFR,EAAQQ,EAAOC,YAErB,IA4GF,OACI,yBAAKpB,UAAU,QAEPU,EAAKW,KAAI,SAAAC,GACL,OACI,yBAAKtB,UAAU,iBAAiBuB,IAAKD,EAAKE,KACtC,wBAAIC,MAAO,CAACC,QAAQ,QAAQ,kBAAC,IAAD,CAAMzB,GAAIqB,EAAKK,SAASH,MAAM5B,EAAM4B,IAAI,YAAYF,EAAKK,SAASH,IAAM,YAAcF,EAAKK,SAASC,MAAaN,EAAKK,SAASH,MAAM5B,EAAM4B,KAAO,uBAAGxB,UAAU,iBAAiByB,MAAO,CAACI,MAAM,SAAU1B,QAAS,WA5BlP,IAAC2B,IA4BiQR,EAAKE,IA3BtRX,MAAM,eAAD,OAAgBiB,GAAS,CAC1BC,OAAO,SACPjB,QAAQ,CACJ,cAAgB,UAAUV,aAAaW,QAAQ,UAEpDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GACFa,QAAQC,IAAId,GACZ,IAAMe,EAAUxB,EAAKyB,QAAO,SAAAb,GACxB,OAAOA,EAAKE,MAAQL,EAAOK,OAE/Bb,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAakL,WAC9K,yBAAKrC,UAAU,cACX,yBAAKsC,IAAI,kBAAkBC,IAAKjB,EAAKkB,SAEzC,yBAAKxC,UAAU,gBACX,uBAAGA,UAAU,iBAAiByB,MAAO,CAACgB,MAAM,QAA5C,YACCnB,EAAKoB,MAAMC,SAAS/C,EAAM4B,KAE3B,uBAAGxB,UAAU,iBAAiBG,QAAS,WA7FhD,IAACD,IA6F+DoB,EAAKE,IA5FpFX,MAAM,UAAU,CACZkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBhB,OAAO5B,MAEZc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMe,EAAUxB,EAAKW,KAAI,SAAAC,GACrB,OAAGA,EAAKE,MAAML,EAAOK,IACVL,EAGAG,KAGfX,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAsEQ,cAEA,uBAAGrC,UAAU,iBAAiBG,QAAS,WA1HlD,IAACD,IA0H+DoB,EAAKE,IAzHlFX,MAAM,QAAQ,CACVkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBhB,OAAO5B,MAEZc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GAEF,IAAMe,EAAUxB,EAAKW,KAAI,SAAAC,GACrB,OAAGA,EAAKE,MAAML,EAAOK,IACVL,EAGAG,KAGfX,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAkGQ,aAGA,4BAAKf,EAAKoB,MAAMK,OAAhB,UACA,4BAAKzB,EAAK0B,OACV,2BAAI1B,EAAKsB,MAELtB,EAAK2B,SAAS5B,KAAI,SAAA6B,GACd,OACI,wBAAI3B,IAAK2B,EAAO1B,KAAK,0BAAMC,MAAO,CAAC0B,WAAW,MAAOD,EAAOvB,SAASC,MAArE,IAAmFsB,EAAOE,SAItG,0BAAMC,SAAU,SAACC,GAjFzB,IAACF,EAAKtB,EAkFMwB,EAAEC,iBAlFbH,EAmFuBE,EAAEE,OAAO,GAAGC,MAnF9B3B,EAmFoCR,EAAKE,IAlF/DX,MAAM,WAAW,CACbkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBhB,SACAsB,WAGPpC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEF,IAAMe,EAAUxB,EAAKW,KAAI,SAAAC,GACrB,OAAGA,EAAKE,MAAML,EAAOK,IACVL,EAGAG,KAGfX,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QA2DY,2BAAO/B,KAAK,OAAOoD,YAAY,2B,gBC5FpDC,EA7DD,WAAK,IAAD,EACWjE,qBAAWC,GAAvBE,GADC,EACPD,MADO,EACDC,UACPC,EAAUC,cAFF,EAGiBU,mBAAS,IAH1B,mBAGPmD,EAHO,KAGEC,EAHF,OAIWpD,mBAAS,IAJpB,mBAIPqD,EAJO,KAIDC,EAJC,KAuCd,OAEI,yBAAK/D,UAAU,UACf,yBAAKA,UAAU,8BACX,yCACA,2BAAOM,KAAK,OAAOoD,YAAY,QAC/BD,MAAOK,EAAOE,SAAU,SAACV,GAAD,OAAKS,EAAST,EAAEE,OAAOC,UAC/C,2BAAOnD,KAAK,WAAWoD,YAAY,WACnCD,MAAOG,EAAUI,SAAU,SAACV,GAAD,OAAKO,EAAYP,EAAEE,OAAOC,UACrD,4BAAQzD,UAAU,qDAClBG,QAAS,WA3CT,qJAAqJ8D,KAAKH,GAI9JjD,MAAM,UAAU,CACZkB,OAAO,OACPjB,QAAQ,CACJ,eAAiB,oBAErB8B,KAAKC,KAAKC,UAAU,CAChBgB,QACAF,eAGP5C,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAN,GACCA,EAAKwD,MACJC,IAAEC,MAAM,CAACC,KAAK3D,EAAKwD,MAAMI,QAAQ,0BAGjClE,aAAamE,QAAQ,MAAM7D,EAAK8D,OAChCpE,aAAamE,QAAQ,OAAO1B,KAAKC,UAAUpC,EAAK+D,OAChD5E,EAAS,CAACS,KAAK,OAAOoE,QAAQhE,EAAK+D,OACnCN,IAAEC,MAAM,CAACC,KAAK,mBAAmBC,QAAQ,2BACzCxE,EAAQS,KAAK,SAGpB6B,OAAO,SAAAC,GACJL,QAAQC,IAAII,MA3BZ8B,IAAEC,MAAM,CAACC,KAAK,gBAAgBC,QAAQ,2BAyCtC,SAIA,4BACI,kBAAC,IAAD,CAAMrE,GAAG,WAAT,+B,OC+CD0E,EAvGC,WAAK,IAAD,EACSlE,mBAAS,IADlB,mBACTmE,EADS,KACFC,EADE,OAESpE,mBAAS,IAFlB,mBAETqE,EAFS,KAEHC,EAFG,OAGSrF,qBAAWC,GAA7BC,EAHS,EAGTA,MAAMC,EAHG,EAGHA,SACbe,qBAAU,WACNC,MAAM,UAAU,CACZC,QAAQ,CACJ,cAAgB,UAAUV,aAAaW,QAAQ,UAGtDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACF0D,EAAQ1D,EAAO6D,aAErB,IACFpE,qBAAU,WACN,GAAGkE,EAAM,CACL,IAAMpE,EAAO,IAAIuE,SACjBvE,EAAKwE,OAAO,OAAOJ,GACnBpE,EAAKwE,OAAO,gBAAgB,eAC5BxE,EAAKwE,OAAO,aAAa,aACzBrE,MAAM,2DAA0D,CAC5DkB,OAAO,OACPa,KAAKlC,IAERM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAN,GAGFG,MAAM,aAAa,CACfkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBqC,IAAIzE,EAAK0E,QAEdpE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GACFa,QAAQC,IAAId,GACZf,aAAamE,QAAQ,OAAO1B,KAAKC,UAAL,2BAAmBlD,GAAnB,IAAyBuF,IAAIhE,EAAOgE,QAChEtF,EAAS,CAACS,KAAK,YAAYoE,QAAQvD,EAAOgE,YAGjD/C,OAAM,SAAAC,GACHL,QAAQC,IAAII,SAGtB,CAACyC,IAKH,OACI,yBAAKrD,MAAO,CAAC4D,SAAS,QAAQC,OAAO,aACjC,yBAAK7D,MAAO,CACR6D,OAAO,WACPC,aAAa,mBAEjB,yBAAK9D,MAAO,CACR+D,QAAQ,OACRC,eAAe,iBAEf,6BACI,yBAAKhE,MAAO,CAACiE,MAAM,QAAQC,OAAS,QAAQC,aAAa,QACzDrD,IAAK3C,EAAMA,EAAMuF,IAAI,UACrB7C,IAAI,2BAER,6BACI,4BAAK1C,EAAMA,EAAMgC,KAAK,WACtB,4BAAKhC,EAAMA,EAAMkE,MAAM,WACvB,yBAAKrC,MAAO,CAAC+D,QAAQ,OAAOC,eAAe,gBAAgBC,MAAM,SAC7D,4BAAKd,EAAO7B,OAAZ,UACA,4BAAKnD,EAAMA,EAAMiG,UAAU9C,OAAO,UAAlC,cACA,4BAAKnD,EAAMA,EAAMkG,UAAU/C,OAAO,UAAlC,iBAKR,yBAAK/C,UAAU,yBAAyByB,MAAO,CAAC6D,OAAO,SAC/C,yBAAKtF,UAAU,6BACX,4CACA,2BAAOM,KAAK,OAAO0D,SAAU,SAACV,GAAD,OAjClCyC,EAiCiDzC,EAAEE,OAAOwC,MAAM,QAhC/EjB,EAASgB,GADK,IAACA,MAmCC,yBAAK/F,UAAU,qBACX,2BAAOA,UAAU,qBAAqBM,KAAK,YAI3D,yBAAKN,UAAU,WAEP4E,EAAOvD,KAAI,SAAAC,GACP,OACI,yBAAKC,IAAKD,EAAKE,IAAKxB,UAAY,OAAOuC,IAAKjB,EAAKkB,MAAQF,IAAMhB,EAAK0B,cCcjFiD,EA3GA,WACX,IAAMnG,EAAUC,cADD,EAEQU,mBAAS,IAFjB,mBAERmB,EAFQ,KAEHsE,EAFG,OAGgBzF,mBAAS,IAHzB,mBAGRmD,EAHQ,KAGCC,EAHD,OAIUpD,mBAAS,IAJnB,mBAIRqD,EAJQ,KAIFC,EAJE,OAKUtD,mBAAS,IALnB,mBAKRqE,EALQ,KAKFC,EALE,OAMMtE,wBAAS0F,GANf,mBAMRf,EANQ,KAMJgB,EANI,KAQfxF,qBAAU,WACHwE,GACCiB,MAEN,CAACjB,IAEH,IAkBMiB,EAAe,WACb,qJAAqJpC,KAAKH,GAI9JjD,MAAM,UAAU,CACZkB,OAAO,OACPjB,QAAQ,CACJ,eAAiB,oBAErB8B,KAAKC,KAAKC,UAAU,CAChBlB,OACAkC,QACAF,WACAuB,IAAIC,MAETpE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAN,GACCA,EAAKwD,MACJC,IAAEC,MAAM,CAACC,KAAK3D,EAAKwD,MAAMI,QAAQ,0BAGjCH,IAAEC,MAAM,CAACC,KAAK3D,EAAK4F,QAAQhC,QAAQ,2BACnCxE,EAAQS,KAAK,cAGpB6B,OAAO,SAAAC,GACJL,QAAQC,IAAII,MAzBZ8B,IAAEC,MAAM,CAACC,KAAK,gBAAgBC,QAAQ,0BA6BxCiC,EAAW,WACVzB,EAlDW,WACd,IAAMpE,EAAO,IAAIuE,SACjBvE,EAAKwE,OAAO,OAAOJ,GACnBpE,EAAKwE,OAAO,gBAAgB,eAC5BxE,EAAKwE,OAAO,aAAa,aACzBrE,MAAM,2DAA0D,CAC5DkB,OAAO,OACPa,KAAKlC,IAERM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAN,GACF0F,EAAO1F,EAAK0E,QAEfhD,OAAM,SAAAC,GACHL,QAAQC,IAAII,MAqCZmE,GAGAH,KAKR,OAEI,yBAAKrG,UAAU,UACf,yBAAKA,UAAU,8BACX,yCACA,2BAAOM,KAAK,OAAOoD,YAAY,OAC/BD,MAAO7B,EAAMoC,SAAU,SAACV,GAAD,OAAK4C,EAAQ5C,EAAEE,OAAOC,UAC7C,2BAAOnD,KAAK,OAAOoD,YAAY,QAC/BD,MAAOK,EAAOE,SAAU,SAACV,GAAD,OAAKS,EAAST,EAAEE,OAAOC,UAC/C,2BAAOnD,KAAK,WAAWoD,YAAY,WACnCD,MAAOG,EAAUI,SAAU,SAACV,GAAD,OAAKO,EAAYP,EAAEE,OAAOC,UACrD,yBAAKzD,UAAU,0BACP,yBAAKA,UAAU,6BACX,4CACA,2BAAOM,KAAK,OAAO0D,SAAU,SAACV,GAAD,OAAKyB,EAASzB,EAAEE,OAAOwC,MAAM,QAE9D,yBAAKhG,UAAU,qBACX,2BAAOA,UAAU,qBAAqBM,KAAK,WAGvD,4BAAQN,UAAU,qDAClBG,QAAS,kBAAIoG,MADb,UAIA,4BACI,kBAAC,IAAD,CAAMtG,GAAG,UAAT,iCCTDwG,EAzFI,WACf,IAAM3G,EAAUC,cADG,EAGMU,mBAAS,IAHf,mBAGZuC,EAHY,KAGN0D,EAHM,OAIIjG,mBAAS,IAJb,mBAIZmC,EAJY,KAIP+D,EAJO,OAKMlG,mBAAS,IALf,mBAKZqE,EALY,KAKNC,EALM,OAMEtE,mBAAS,IANX,mBAMZ2E,EANY,KAMRgB,EANQ,KAOnBxF,qBAAU,WACHwE,GACCvE,MAAM,cAAc,CAChBkB,OAAO,OACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAiB,UAAUV,aAAaW,QAAQ,QAEpD6B,KAAKC,KAAKC,UAAU,CAChBE,QACAJ,OACAuC,IAAIC,MAETpE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAN,GAECA,EAAKwD,MACJC,IAAEC,MAAM,CAACC,KAAK3D,EAAKwD,MAAMI,QAAQ,0BAGjCH,IAAEC,MAAM,CAACC,KAAK,4BAA4BC,QAAQ,2BAClDxE,EAAQS,KAAK,SAGpB6B,OAAO,SAAAC,GACJL,QAAQC,IAAII,QAGtB,CAAC+C,IAqBH,OAEI,yBAAKpF,UAAU,mBACfyB,MAAO,CACH6D,OAAO,YACPD,SAAS,QACT3D,QAAQ,OACRkF,UAAU,WAEV,2BAAOtG,KAAK,OAAOoD,YAAY,QAC/BD,MAAOT,EAAOgB,SAAU,SAACV,GAAKoD,EAASpD,EAAEE,OAAOC,UAChD,2BAAOnD,KAAK,OAAOoD,YAAY,OAC/BD,MAAOb,EAAMoB,SAAU,SAACV,GAAKqD,EAAQrD,EAAEE,OAAOC,UAG1C,yBAAKzD,UAAU,0BACX,yBAAKA,UAAU,6BACX,8CACA,2BAAOM,KAAK,OAAO0D,SAAU,SAACV,GAAD,OAAKyB,EAASzB,EAAEE,OAAOwC,MAAM,QAE9D,yBAAKhG,UAAU,qBACX,2BAAOA,UAAU,qBAAqBM,KAAK,WAGvD,4BAAQN,UAAU,qDAClBG,QAAS,kBA5CG,WAEhB,IAAMO,EAAO,IAAIuE,SACjBvE,EAAKwE,OAAO,OAAOJ,GACnBpE,EAAKwE,OAAO,gBAAgB,eAC5BxE,EAAKwE,OAAO,aAAa,aACzBrE,MAAM,2DAA0D,CAC5DkB,OAAO,OACPa,KAAKlC,IAERM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAN,GACF0F,EAAO1F,EAAK0E,QAEfhD,OAAM,SAAAC,GACHL,QAAQC,IAAII,MA6BCwE,KADb,iB,QC0DGlC,EA1IC,WAAK,IAAD,EACiBlE,mBAAS,MAD1B,mBACTqG,EADS,KACGC,EADH,OAGSrH,qBAAWC,GAA7BC,EAHS,EAGTA,MAAMC,EAHG,EAGHA,SACNmH,EAAUC,cAAVD,OAJS,EAKmBvG,oBAASb,GAAMA,EAAMkG,UAAUnD,SAASqE,IAL3D,mBAKTE,EALS,KAKEC,EALF,KAOhBvG,qBAAU,WACNC,MAAM,SAAD,OAAUmG,GAAS,CACpBlG,QAAQ,CACJ,cAAgB,UAAUV,aAAaW,QAAQ,UAGtDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEF4F,EAAW5F,QAEjB,IAkEF,OACI,oCACC2F,EACG,yBAAKrF,MAAO,CAAC4D,SAAS,QAAQC,OAAO,aACjC,yBAAK7D,MAAO,CACR+D,QAAQ,OACRC,eAAe,eACfH,OAAO,WACPC,aAAa,mBAEb,6BACI,yBAAK9D,MAAO,CAACiE,MAAM,QAAQC,OAAS,QAAQC,aAAa,QACzDrD,IAAKuE,EAAYrC,KAAKU,IACtB7C,IAAI,2BAER,6BACI,4BAAKwE,EAAYrC,KAAK7C,MACtB,4BAAKkF,EAAYrC,KAAKX,OACtB,yBAAKrC,MAAO,CAAC+D,QAAQ,OAAOC,eAAe,gBAAgBC,MAAM,SAC7D,4BAAKoB,EAAY1F,MAAM2B,OAAvB,UACA,4BAAK+D,EAAYrC,KAAKoB,UAAU9C,OAAhC,cACA,4BAAK+D,EAAYrC,KAAKqB,UAAU/C,OAAhC,eAEHmE,EACG,4BAAQzF,MAAO,CAAC6D,OAAO,QAAStF,UAAU,qDAAqDG,QAAS,WAvF5HU,MAAM,UAAU,CACZkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBsE,SAASJ,MAEdhG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GAEFtB,EAAS,CAACS,KAAK,SAASoE,QAAQ,CAACmB,UAAU1E,EAAO0E,UAAUC,UAAU3E,EAAO2E,aAC7E1F,aAAamE,QAAQ,OAAO1B,KAAKC,UAAU3B,IAC3C4F,GAAW,SAACM,GACR,kCACOA,GADP,IAEI5C,KAAK,2BACE4C,EAAU5C,MADb,IAEAoB,UAAU,GAAD,mBAAKwB,EAAU5C,KAAKoB,WAApB,CAA8B1E,EAAOK,aAI1D2F,GAAc,MAEjB/E,OAAM,SAAAC,GACHL,QAAQC,IAAII,QA6DI,UAIA,4BAAQZ,MAAO,CAAC6D,OAAO,QAAStF,UAAU,qDAAqDG,QAAS,WA5D5HU,MAAM,YAAY,CACdkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBwE,WAAWN,MAEhBhG,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GAEFtB,EAAS,CAACS,KAAK,SAASoE,QAAQ,CAACmB,UAAU1E,EAAO0E,UAAUC,UAAU3E,EAAO2E,aAC7E1F,aAAamE,QAAQ,OAAO1B,KAAKC,UAAU3B,IAE3C4F,GAAW,SAACM,GACR,IAAME,EAAcF,EAAU5C,KAAKoB,UAAU1D,QAAO,SAAAb,GAAI,OAAGA,IAASH,EAAOK,OAC3E,kCACO6F,GADP,IAEI5C,KAAK,2BACE4C,EAAU5C,MADb,IAEAoB,UAAU0B,SAItBJ,GAAc,MAEjB/E,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAgCI,cASZ,yBAAKrC,UAAU,WAEP8G,EAAY1F,MAAMC,KAAI,SAAAC,GAClB,OACI,yBAAKC,IAAKD,EAAKE,IAAKxB,UAAY,OAAOuC,IAAKjB,EAAKkB,MAAQF,IAAMhB,EAAK0B,aAO5F,4CCoCOxC,EAxKF,WAAK,IAAD,EACQC,mBAAS,IADjB,mBACNC,EADM,KACDC,EADC,OAEYjB,qBAAWC,GAA7BC,EAFM,EAENA,MAFM,EAEAC,SACbe,qBAAU,WACNC,MAAM,cAAc,CAChBC,QAAQ,CACJ,cAAgB,UAAUV,aAAaW,QAAQ,UAGtDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEFR,EAAQQ,EAAOC,YAErB,IA6GF,OACI,yBAAKpB,UAAU,QAEPU,EAAKW,KAAI,SAAAC,GACL,OACI,yBAAKtB,UAAU,iBAAiBuB,IAAKD,EAAKE,KACtC,wBAAIC,MAAO,CAACC,QAAQ,QAAQ,kBAAC,IAAD,CAAMzB,GAAIqB,EAAKK,SAASH,MAAM5B,EAAM4B,IAAI,YAAYF,EAAKK,SAASH,IAAM,YAAcF,EAAKK,SAASC,MAAaN,EAAKK,SAASH,MAAM5B,EAAM4B,KAAO,uBAAGxB,UAAU,iBAAiByB,MAAO,CAACI,MAAM,SAAU1B,QAAS,WA5BlP,IAAC2B,IA4BiQR,EAAKE,IA3BtRX,MAAM,eAAD,OAAgBiB,GAAS,CAC1BC,OAAO,SACPjB,QAAQ,CACJ,cAAgB,UAAUV,aAAaW,QAAQ,UAEpDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GACFa,QAAQC,IAAId,GACZ,IAAMe,EAAUxB,EAAKyB,QAAO,SAAAb,GACxB,OAAOA,EAAKE,MAAQL,EAAOK,OAE/Bb,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAakL,WAC9K,yBAAKrC,UAAU,cACX,yBAAKsC,IAAI,kBAAkBC,IAAKjB,EAAKkB,SAEzC,yBAAKxC,UAAU,gBACX,uBAAGA,UAAU,iBAAiByB,MAAO,CAACgB,MAAM,QAA5C,YACCnB,EAAKoB,MAAMC,SAAS/C,EAAM4B,KAE3B,uBAAGxB,UAAU,iBAAiBG,QAAS,WA7FhD,IAACD,IA6F+DoB,EAAKE,IA5FpFX,MAAM,UAAU,CACZkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBhB,OAAO5B,MAEZc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMe,EAAUxB,EAAKW,KAAI,SAAAC,GACrB,OAAGA,EAAKE,MAAML,EAAOK,IACVL,EAGAG,KAGfX,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAsEQ,cAEA,uBAAGrC,UAAU,iBAAiBG,QAAS,WA3HlD,IAACD,IA2H+DoB,EAAKE,IA1HlFX,MAAM,QAAQ,CACVkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBhB,OAAO5B,MAEZc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAAG,GAEF,IAAMe,EAAUxB,EAAKW,KAAI,SAAAC,GACrB,OAAGA,EAAKE,MAAML,EAAOK,IACVL,EAGAG,KAGfX,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAmGQ,aAGA,4BAAKf,EAAKoB,MAAMK,OAAhB,UACA,4BAAKzB,EAAK0B,OACV,2BAAI1B,EAAKsB,MAELtB,EAAK2B,SAAS5B,KAAI,SAAA6B,GACd,OACI,wBAAI3B,IAAK2B,EAAO1B,KAAK,0BAAMC,MAAO,CAAC0B,WAAW,MAAOD,EAAOvB,SAASC,MAArE,IAAmFsB,EAAOE,SAItG,0BAAMC,SAAU,SAACC,GAjFzB,IAACF,EAAKtB,EAkFMwB,EAAEC,iBAlFbH,EAmFuBE,EAAEE,OAAO,GAAGC,MAnF9B3B,EAmFoCR,EAAKE,IAlF/DX,MAAM,WAAW,CACbkB,OAAO,MACPjB,QAAQ,CACJ,eAAiB,mBACjB,cAAgB,UAAUV,aAAaW,QAAQ,QAEnD6B,KAAKC,KAAKC,UAAU,CAChBhB,SACAsB,WAGPpC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEF,IAAMe,EAAUxB,EAAKW,KAAI,SAAAC,GACrB,OAAGA,EAAKE,MAAML,EAAOK,IACVL,EAGAG,KAGfX,EAAQuB,MAEXE,OAAM,SAAAC,GACHL,QAAQC,IAAII,QA2DY,2BAAO/B,KAAK,OAAOoD,YAAY,0BC9JtD8D,EAAU,SAAC5H,EAAM6H,GAC1B,MAAiB,SAAdA,EAAOnH,KACCmH,EAAO/C,QAED,UAAd+C,EAAOnH,KACC,KAEM,WAAdmH,EAAOnH,KACC,2BACAV,GADP,IAEIiG,UAAU4B,EAAO/C,QAAQmB,UACzBC,UAAU2B,EAAO/C,QAAQoB,YAGhB,cAAd2B,EAAOnH,KACC,2BACAV,GADP,IAEIuF,IAAIsC,EAAO/C,UAGZ9E,GCRED,EAAc+H,0BAErBC,EAAU,WACd,IAAM7H,EAAUC,cADE,EAEOL,qBAAWC,GAAvBE,GAFK,EAEXD,MAFW,EAELC,UAYb,OAXAe,qBAAU,WACR,IAAM6D,EAAO5B,KAAK+E,MAAMxH,aAAaW,QAAQ,SACxC0D,EACD5E,EAAS,CAACS,KAAK,OAAOoE,QAAQD,IAI9B3E,EAAQS,KAAK,YAGjB,IAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsH,OAAK,EAACC,KAAO,KAClB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAO,UACZ,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAO,YAClB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAO,WACZ,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAO,eACZ,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAO,oBACZ,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAO,eACZ,kBAAC,EAAD,SAkBOE,MAZf,WAAgB,IAAD,EACYC,qBAAWT,ED1DV,MCyDb,mBACN5H,EADM,KACAC,EADA,KAEb,OACE,kBAACF,EAAYuI,SAAb,CAAsBzE,MAAO,CAAC7D,QAAMC,aACpC,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCnDcsI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/H,MAAK,SAAAgI,GACJA,EAAaC,gBAEd7G,OAAM,SAAA8B,GACLlC,QAAQkC,MAAMA,EAAMoC,c","file":"static/js/main.2576b5c6.chunk.js","sourcesContent":["import React,{useContext} from 'react';\nimport {Link,useHistory} from 'react-router-dom';\nimport {UserContext} from '../App'\n\n\nconst NavBar = ()=>{\n  const {state,dispatch} = useContext(UserContext)\n  const history = useHistory()\n  const renderList = ()=>{\n    if(state){\n      return [\n        <li><Link to=\"/profile\">Profile</Link></li>,\n        <li><Link to=\"/createpost\">Create Post</Link></li>,\n        <li><Link to=\"/followpost\">Following Post</Link></li>,\n        <li>\n          <button className=\"btn waves-effect waves-light #c62828 red darken-3\"\n            onClick={()=>{\n              localStorage.clear()\n              dispatch({type:\"CLEAR\"})\n              history.push('/login')\n            }}>\n                Logout\n          </button>\n        </li>\n      ]\n    }\n    else{\n      return [\n        <li><Link to=\"/login\">Login</Link></li>,\n        <li><Link to=\"/signup\">Signup</Link></li>\n      ]\n    }\n  }\n    return (\n        <nav>\n        <div className=\"nav-wrapper white\">\n          <Link to={state?\"/\":\"/login\"} className=\"brand-logo left\">Instagram</Link>\n          <ul id=\"nav-mobile\" className=\"right\">\n            {renderList()}\n          </ul>\n        </div>\n      </nav>\n    )\n} \n\n\nexport default NavBar","import React,{useState,useEffect,useContext} from 'react';\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\n\nconst Home = ()=>{\n    const [data,setData]=useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n        fetch('/allpost',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            setData(result.posts)\n        })\n    },[])\n\n    const likePost = (id)=>{\n        fetch('/like',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            const newData = data.map(item=>{\n                if(item._id===result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    const unlikePost = (id)=>{\n        fetch('/unlike',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData = data.map(item=>{\n                if(item._id===result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n        fetch('/comment',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            const newData = data.map(item=>{\n                if(item._id===result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const deletePost = (postId)=>{\n        fetch(`/deletepost/${postId}`,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n        \n    }\n\n\n\n    return (\n        <div className=\"home\">\n            {\n                data.map(item=>{\n                    return(\n                        <div className=\"card home-card\" key={item._id}>\n                            <h5 style={{padding:\"6px\"}}><Link to={item.postedBy._id!==state._id?'/profile/'+item.postedBy._id : '/profile' }>{item.postedBy.name}</Link>{item.postedBy._id===state._id && <i className=\"material-icons\" style={{float:\"right\"}} onClick={()=>{deletePost(item._id)}}>delete</i>}</h5>\n                            <div className=\"card-image\">\n                                <img alt=\"gallery content\" src={item.photo} />\n                            </div>\n                            <div className=\"card-content\">\n                                <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                                {item.likes.includes(state._id)\n                                ?\n                                <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\n                                :\n                                <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}> thumb_up</i>\n                                \n                                }\n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                            <h6 key={record._id}><span style={{fontWeight:500}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                    <input type=\"text\" placeholder=\"Add a comment\"/>\n                                </form>\n                                \n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Home","import React,{useState,useContext} from 'react';\nimport {Link,useHistory} from 'react-router-dom';\nimport M from 'materialize-css';\nimport {UserContext} from '../../App'\n\n\nconst Login = ()=>{\n    const {state,dispatch} = useContext(UserContext)\n    const history = useHistory()\n    const [password,setPassword] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const PostData = ()=>{\n        if(!/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html:\"Invalid Email\",classes:\"#c62828 red darken-3\"})\n            return\n        }\n        fetch(\"/signin\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\" : \"application/json\"\n            },\n            body:JSON.stringify({\n                email,\n                password\n            })\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.error){\n                M.toast({html:data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n                localStorage.setItem(\"jwt\",data.token)\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\n                dispatch({type:\"USER\",payload:data.user})\n                M.toast({html:\"Signedin Success\",classes:\"#43a047 green darken-1\"})\n                history.push('/')\n            }\n        })\n        .catch (err=>{\n            console.log(err)\n        })\n    }\n\n\n    return (\n\n        <div className=\"Mycard\">\n        <div className=\"card Auth-card input-field\">\n            <h2>Instagram</h2>\n            <input type=\"text\" placeholder=\"email\"\n            value={email} onChange={(e)=>setEmail(e.target.value)}/>\n            <input type=\"password\" placeholder=\"password\"\n            value={password} onChange={(e)=>setPassword(e.target.value)}/>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n            onClick={()=>PostData()}>\n                Login\n            </button>\n            <h5>\n                <Link to=\"/signup\">Don't have an account ?</Link>\n            </h5>\n        </div>\n        </div>\n        \n    )\n}\n\nexport default Login","import React,{useEffect,useState,useContext} from 'react';\nimport {UserContext} from '../../App'\n\nconst Profile = ()=>{\n    const [mypics,setPics] = useState([])\n    const [image,setImage] = useState(\"\")\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n        fetch('/mypost',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            setPics(result.mypost)\n        })\n    },[])\n    useEffect(()=>{\n        if(image){\n            const data = new FormData()\n            data.append(\"file\",image)\n            data.append(\"upload_preset\",\"insta-clone\")\n            data.append(\"cloud_name\",\"aggyash99\")\n            fetch(\"\thttps://api.cloudinary.com/v1_1/aggyash99/image/upload\",{\n                method:\"post\",\n                body:data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                //localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\n                //dispatch({type:\"UPDATEPIC\",payload:data.url})\n                fetch('/updatepic',{\n                    method:\"put\",\n                    headers:{\n                        \"Content-Type\" : \"application/json\",\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                    },\n                    body:JSON.stringify({\n                        pic:data.url\n                    })\n                }).then(res=>res.json())\n                .then(result=>{\n                    console.log(result)\n                    localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\n                    dispatch({type:\"UPDATEPIC\",payload:result.pic})\n                })\n            })\n            .catch(err=>{\n                console.log(err)\n        })\n        }\n    },[image])\n    const UpdatePic = (file)=>{\n        setImage(file) \n    }\n    //console.log(state)\n    return (\n        <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\n            <div style={{\n                margin:\"18px 0px\",\n                borderBottom:\"1px solid grey\"\n            }}>\n            <div style={{\n                display:\"flex\",\n                justifyContent:\"space-around\",\n            }}>\n                <div>\n                    <img style={{width:\"160px\",height : \"160px\",borderRadius:\"80px\"}}\n                    src={state?state.pic:\"loading\"}\n                    alt=\"Profile of the Person\"/>\n                </div>\n                <div >\n                    <h4>{state?state.name:\"loading\"}</h4>\n                    <h5>{state?state.email:\"loading\"}</h5>\n                    <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\n                        <h6>{mypics.length} Posts</h6>\n                        <h6>{state?state.followers.length:\"loading\"} Followers</h6>\n                        <h6>{state?state.following.length:\"loading\"} Following</h6>\n                    </div>\n                </div>\n            \n            </div>\n                <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\n                        <div className=\"btn #64b5f6 blue darken-1\">\n                            <span>Update Pic</span>\n                            <input type=\"file\" onChange={(e)=>UpdatePic(e.target.files[0])}/>\n                        </div>\n                        <div className=\"file-path-wrapper\">\n                            <input className=\"file-path validate\" type=\"text\"/>\n                        </div>\n                </div>\n            </div>\n            <div className=\"gallery\">\n                {\n                    mypics.map(item=>{\n                        return(\n                            <img key={item._id} className = \"item\" src={item.photo}  alt= {item.title}/>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","import React,{useState,useEffect} from 'react';\nimport {Link,useHistory} from 'react-router-dom';\nimport M from 'materialize-css';\n\nconst Signup = ()=>{\n    const history = useHistory()\n    const [name,setName] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(undefined)\n\n    useEffect(()=>{\n        if(url){\n            uploadFields()\n        }\n    },[url])\n\n    const uploadPic = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"aggyash99\")\n        fetch(\"\thttps://api.cloudinary.com/v1_1/aggyash99/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            setUrl(data.url)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const uploadFields = ()=>{\n        if(!/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html:\"Invalid Email\",classes:\"#c62828 red darken-3\"})\n            return\n        }\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\" : \"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                email,\n                password,\n                pic:url\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            if(data.error){\n                M.toast({html:data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n                M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\n                history.push('/login')\n            }\n        })\n        .catch (err=>{\n            console.log(err)\n        })\n    }\n\n    const PostData = ()=>{\n        if(image){\n            uploadPic()\n        }\n        else{\n            uploadFields()\n        }\n        \n    }\n\n    return (\n\n        <div className=\"Mycard\">\n        <div className=\"card Auth-card input-field\">\n            <h2>Instagram</h2>\n            <input type=\"text\" placeholder=\"name\"\n            value={name} onChange={(e)=>setName(e.target.value)}/>\n            <input type=\"text\" placeholder=\"email\"\n            value={email} onChange={(e)=>setEmail(e.target.value)}/>\n            <input type=\"password\" placeholder=\"password\"\n            value={password} onChange={(e)=>setPassword(e.target.value)}/>\n            <div className=\"file-field input-field\">\n                    <div className=\"btn #64b5f6 blue darken-1\">\n                        <span>Upload Pic</span>\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\"/>\n                    </div>\n            </div>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n            onClick={()=>PostData()} >\n                Signup\n            </button>\n            <h5>\n                <Link to=\"/login\">Already have an account ?</Link>\n            </h5>\n        </div>\n        \n        </div>\n        \n    )\n}\n\nexport default Signup","import React,{useState,useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom';\n\nconst CreatePost = ()=>{\n    const history = useHistory()\n\n    const [title,setTitle] = useState(\"\")\n    const [body,setBody] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(\"\")\n    useEffect(()=>{\n        if(url){\n            fetch(\"/createpost\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\" : \"application/json\",\n                    \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body:JSON.stringify({\n                    title,\n                    body,\n                    pic:url\n                })\n            }).then(res=>res.json())\n            .then(data=>{\n                \n                if(data.error){\n                    M.toast({html:data.error,classes:\"#c62828 red darken-3\"})\n                }\n                else{\n                    M.toast({html:\"Created post successfully\",classes:\"#43a047 green darken-1\"})\n                    history.push('/')\n                }\n            })\n            .catch (err=>{\n                console.log(err)\n            })\n        }\n    },[url])\n\n    const postDetails = ()=>{\n        \n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"aggyash99\")\n        fetch(\"\thttps://api.cloudinary.com/v1_1/aggyash99/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            setUrl(data.url)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    return(\n\n        <div className=\"card input-filed\" \n        style={{\n            margin:\"30px auto\",\n            maxWidth:\"500px\",\n            padding:\"20px\",\n            textAlign:\"center\"    \n        }}>\n            <input type=\"text\" placeholder=\"Title\" \n            value={title} onChange={(e)=>{setTitle(e.target.value)}}/>\n            <input type=\"text\" placeholder=\"body\"\n            value={body} onChange={(e)=>{setBody(e.target.value)}} />\n            \n            \n                <div className=\"file-field input-field\">\n                    <div className=\"btn #64b5f6 blue darken-1\">\n                        <span>Upload Image</span>\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\"/>\n                    </div>\n                </div>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n            onClick={()=>postDetails()}>\n                Submit Post\n            </button>\n            \n        </div>\n    )\n}\n\nexport default CreatePost","import React,{useEffect,useState,useContext} from 'react';\nimport {UserContext} from '../../App'\nimport {useParams} from 'react-router-dom'\n\nconst Profile = ()=>{\n    const [userProfile,setProfile] = useState(null)\n    \n    const {state,dispatch} = useContext(UserContext)\n    const {userid} = useParams()\n    const [showFollow,setShowFollow] = useState(state?state.following.includes(userid):true)\n    //console.log(userid)\n    useEffect(()=>{\n        fetch(`/user/${userid}`,{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            setProfile(result)\n        })\n    },[])\n\n    const followUser = ()=>{\n        fetch('/follow',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                followId:userid\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            dispatch({type:\"UPDATE\",payload:{followers:result.followers,following:result.following}})\n            localStorage.setItem(\"user\",JSON.stringify(result))\n            setProfile((prevstate)=>{\n                return{\n                    ...prevstate,\n                    user:{\n                        ...prevstate.user,\n                        followers:[...prevstate.user.followers,result._id]\n                    }\n                }\n            })\n            setShowFollow(false)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const unfollowUser = ()=>{\n        fetch('/unfollow',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                unfollowId:userid\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            dispatch({type:\"UPDATE\",payload:{followers:result.followers,following:result.following}})\n            localStorage.setItem(\"user\",JSON.stringify(result))\n            \n            setProfile((prevstate)=>{\n                const newFollower = prevstate.user.followers.filter(item=> item !== result._id)\n                return{\n                    ...prevstate,\n                    user:{\n                        ...prevstate.user,\n                        followers:newFollower\n                    }\n                }\n            })\n            setShowFollow(true)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    return (\n        <>\n        {userProfile ?\n            <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\n                <div style={{\n                    display:\"flex\",\n                    justifyContent:\"space-around\",\n                    margin:\"18px 0px\",\n                    borderBottom:\"1px solid grey\"\n                }}>\n                    <div>\n                        <img style={{width:\"160px\",height : \"160px\",borderRadius:\"80px\"}}\n                        src={userProfile.user.pic}\n                        alt=\"Profile of the Person\"/>\n                    </div>\n                    <div >\n                        <h4>{userProfile.user.name}</h4>\n                        <h5>{userProfile.user.email}</h5>\n                        <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\n                            <h6>{userProfile.posts.length} Posts</h6>\n                            <h6>{userProfile.user.followers.length} Followers</h6>\n                            <h6>{userProfile.user.following.length} Following</h6>\n                        </div>\n                        {showFollow?\n                            <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>followUser()}>\n                                Follow\n                            </button>\n                        :\n                            <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>unfollowUser()}>\n                                Unfollow\n                            </button>\n                        }\n                        \n                        \n                    </div>\n                \n                </div>\n                <div className=\"gallery\">\n                    {\n                        userProfile.posts.map(item=>{\n                            return(\n                                <img key={item._id} className = \"item\" src={item.photo}  alt= {item.title}/>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        :\n        <h2>loading...</h2>\n        }\n        </>\n    )\n}\n\nexport default Profile","import React,{useState,useEffect,useContext} from 'react';\nimport {UserContext} from '../../App'\nimport {Link} from 'react-router-dom'\n\nconst Home = ()=>{\n    const [data,setData]=useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n        fetch('/followpost',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            setData(result.posts)\n        })\n    },[])\n\n    const likePost = (id)=>{\n        fetch('/like',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            const newData = data.map(item=>{\n                if(item._id===result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const unlikePost = (id)=>{\n        fetch('/unlike',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData = data.map(item=>{\n                if(item._id===result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const makeComment = (text,postId)=>{\n        fetch('/comment',{\n            method:\"Put\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            const newData = data.map(item=>{\n                if(item._id===result._id){\n                    return result\n                }\n                else{\n                    return item\n                }\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const deletePost = (postId)=>{\n        fetch(`/deletepost/${postId}`,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n        \n    }\n\n\n\n    return (\n        <div className=\"home\">\n            {\n                data.map(item=>{\n                    return(\n                        <div className=\"card home-card\" key={item._id}>\n                            <h5 style={{padding:\"6px\"}}><Link to={item.postedBy._id!==state._id?'/profile/'+item.postedBy._id : '/profile' }>{item.postedBy.name}</Link>{item.postedBy._id===state._id && <i className=\"material-icons\" style={{float:\"right\"}} onClick={()=>{deletePost(item._id)}}>delete</i>}</h5>\n                            <div className=\"card-image\">\n                                <img alt=\"gallery content\" src={item.photo} />\n                            </div>\n                            <div className=\"card-content\">\n                                <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                                {item.likes.includes(state._id)\n                                ?\n                                <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\n                                :\n                                <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}> thumb_up</i>\n                                \n                                }\n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                            <h6 key={record._id}><span style={{fontWeight:500}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                    <input type=\"text\" placeholder=\"Add a comment\"/>\n                                </form>\n                                \n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Home","export const initialState = null\n\nexport const reducer = (state,action)=>{\n    if(action.type===\"USER\"){\n        return action.payload\n    }\n    if(action.type===\"CLEAR\"){\n        return null\n    }\n    if(action.type===\"UPDATE\"){\n        return {\n            ...state,\n            followers:action.payload.followers,\n            following:action.payload.following\n        }\n    }\n    if(action.type===\"UPDATEPIC\"){\n        return {\n            ...state,\n            pic:action.payload\n        }\n    }\n    return state\n}","import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport NavBar from './components/navbar';\nimport \"./App.css\"\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Home from './components/screens/home'\nimport Login from './components/screens/login'\nimport Profile from './components/screens/profile'\nimport Signup from './components/screens/signup'\nimport CreatePost from './components/screens/createpost'\nimport UserProfile from './components/screens/UserProfile'\nimport FollowPost from './components/screens/followpost'\nimport {reducer,initialState} from './reducers/userReducer'\n\n\nexport const UserContext = createContext()\n\nconst Routing = ()=>{\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n      if(user){\n        dispatch({type:\"USER\",payload:user})\n        \n      }\n      else{\n        history.push('/login')\n      }\n\n  },[])\n  return(\n    <Switch>\n      <Route exact path = \"/\">\n        <Home />\n      </Route>\n      <Route path = \"/login\">\n        <Login />\n      </Route>\n      <Route exact path = \"/profile\">\n        <Profile />\n      </Route>\n      <Route path = \"/signup\">\n        <Signup />\n      </Route>\n      <Route path = \"/createpost\">\n        <CreatePost />\n      </Route>\n      <Route path = \"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path = \"/followpost\">\n        <FollowPost />\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}